
//////////////////////////////////////////////////////////////////////////

// Mutate{{ .Index }} is a helper for mutating {{ .NumberStr }} components.
//
// It can be used to create entities ([Mutate{{ .Index }}.NewEntity] and [Mutate{{ .Index }}.NewEntityWith]),
// and to add or remove components ([Mutate{{ .Index }}.Add], [Mutate{{ .Index }}.Assign] and [Mutate{{ .Index }}.Remove]).
type Mutate{{ .Index }}{{ .TypesFull }} struct {
	ids    []ecs.ID
	remove []ecs.ID
	world  *ecs.World
}

// NewMutate{{ .Index }} creates a new Mutate{{ .Index }} object.
func NewMutate{{ .Index }}{{ .TypesFull }}(w *ecs.World) *Mutate{{ .Index }}{{ .Types }} {
	return &Mutate{{ .Index }}{{ .Types }}{
		ids:   {{ .Include }},
		world: w,
	}
}

// WithRemove sets components to remove in calls to [Mutate{{ .Index }}.Remove] and [Mutate{{ .Index }}.Exchange].
//
// Create the required mask items with [T].
func (m *Mutate{{ .Index }}{{ .Types }}) WithRemove(remove ...Comp) *Mutate{{ .Index }}{{ .Types }} {
	m.remove = toIds(m.world, remove)
	return m
}

// NewEntity creates a new [ecs.Entity] with the Mutate{{ .Index }}'s components.
//
// See also [ecs.World.NewEntity].
func (m *Mutate{{ .Index }}{{ .Types }}) NewEntity() (ecs.Entity, {{ .TypesReturn }}) {
	entity := m.world.NewEntity(m.ids...)
	return entity{{if .ReturnAll}}, {{ .ReturnAll }}{{ end }}
}

{{if .ReturnAll}}
// NewEntityWith creates a new [ecs.Entity] with the Mutate{{ .Index }}'s components, using the supplied values.
//
// See also [ecs.World.NewEntityWith].
func (m *Mutate{{ .Index }}{{ .Types }}) NewEntityWith({{ .Arguments }}) (ecs.Entity, {{ .TypesReturn }}) {
	entity := m.world.NewEntityWith(
		{{ .Components }}
	)
	return entity{{if .ReturnAll}}, {{ .ReturnAll }}{{ end }}
}

// Add the Mutate{{ .Index }}'s components to the given entity.
//
// See also [ecs.World.Add].
func (m *Mutate{{ .Index }}{{ .Types }}) Add(entity ecs.Entity) ({{ .TypesReturn }}) {
	m.world.Add(entity, m.ids...)
	return {{ .ReturnAll }}
}

// Assign the Mutate{{ .Index }}'s components to the given entity, using the supplied values.
//
// See also [ecs.World.Assign] and [ecs.World.AssignN].
func (m *Mutate{{ .Index }}{{ .Types }}) Assign(entity ecs.Entity, {{ .Arguments }}) ({{ .TypesReturn }}) {
	m.world.AssignN(entity,
		{{ .Components }}
	)
	return {{ .ReturnAll }}
}
{{ end }}

// Remove the components set via [Mutate{{ .Index }}.WithRemove] from the given entity.
//
// See also [ecs.World.Remove].
func (m *Mutate{{ .Index }}{{ .Types }}) Remove(entity ecs.Entity) {
	m.world.Remove(entity, m.remove...)
}

{{if .ReturnAll}}
// Exchange components on an entity.
//
// Removes the components set via [Mutate{{ .Index }}.WithRemove].
// Adds Mutate{{ .Index }}'s components as with [Mutate{{ .Index }}.Add].
//
// See also [ecs.World.Exchange].
func (m *Mutate{{ .Index }}{{ .Types }}) Exchange(entity ecs.Entity) ({{ .TypesReturn }}) {
	m.world.Exchange(entity, m.ids, m.remove)
	return {{ .ReturnAll }}
}
{{ end }}
